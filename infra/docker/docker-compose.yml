version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: neptune-postgres
    environment:
      POSTGRES_DB: neptune
      POSTGRES_USER: neptune
      POSTGRES_PASSWORD: neptune_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neptune"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: neptune-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../..
      dockerfile: infra/docker/Dockerfile.api
    container_name: neptune-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://neptune:neptune_dev_password@postgres:5432/neptune
      REDIS_URL: redis://redis:6379
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../services/api/src:/app/src
    command: npm run dev

  ingestion:
    build:
      context: ../..
      dockerfile: infra/docker/Dockerfile.ingestion
    container_name: neptune-ingestion
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      ODDS_API_KEY: ${ODDS_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../../services/ingestion/src:/app/src

volumes:
  postgres_data:
  redis_data:
